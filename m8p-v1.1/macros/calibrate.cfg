[gcode_macro G29]
gcode:
    {% set BED_MESH_PROFILE_NAME = params.BED_MESH_PROFILE_NAME|default("default") %}
    {% if printer.idle_timeout.state == "Printing" %}
        {action_respond_info("This command cannot be used while printing")}
    {% elif printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif  %}
        BED_MESH_PROFILE REMOVE={BED_MESH_PROFILE_NAME}
        BED_MESH_CALIBRATE SAVE={BED_MESH_PROFILE_NAME}
        SAVE_CONFIG

[gcode_macro PROBE_CALIBRATE]
rename_existing: BASE_PROBE_CALIBRATE
gcode:
    # home if not homed
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28                                                                     
    {% endif %}
    BASE_PROBE_CALIBRATE

[gcode_macro MANUAL_MESH_START]
gcode:
    G28
    BED_MESH_CALIBRATE METHOD=MANUAL
    TESTZ Z=-5
	
[gcode_macro DECREASE_Z_POS]
gcode:
    TESTZ Z=-0.025
	
[gcode_macro INCREASE_Z_POS]
gcode:
    TESTZ Z=0.025
	
[gcode_macro NEXT_PROBE_POS]
gcode:
    ACCEPT
    TESTZ Z=-5

# BED_MESH_IF_OUTDATE
# MAX_AGE is checked against the stored variable
# SAVE=1 can be used to force saving the mesh (restarts klipper, so
#        only for manual usage)
# FORCE_LEVEL=1 forces a mesh probe even if MAX_AGE is not reached
[gcode_macro BED_MESH_IF_OUTDATE]
description: Levels the bed if the last leveling was MAX_AGE runs ago. Force leveling by setting FORCE
variable_save_at_end: 0
gcode:
    {% set max_age = params.MAX_AGE|default(10)|int %}
    {% set force_level = params.FORCE|default(0)|int %}
    {% set save = params.SAVE|default(0)|int %}

    # load level_age from stored variables
    {% set svv = printer.save_variables.variables %}
    {% if "level_age" not in svv %} ; first run
        SAVE_VARIABLE VARIABLE=level_age VALUE={max_age}
        {% set level_age = 1 %}
    {% else %} # load level_age and increment
        {% set level_age = svv.level_age %}
        SAVE_VARIABLE VARIABLE=level_age VALUE={level_age|int + 1}
    {% endif %}
    {action_respond_info("Bed mesh age is " + level_age|string) + "."} 

    # Level eventually
    {% if force_level or (level_age >= max_age|int) %}
        {action_respond_info("Bed mesh exceeded max age. Leveling...")} 

        # homing if not homed yet
        {% if 'xy' not in printer.toolhead.homed_axes %}
        G28
        {% endif %}
    
        BED_MESH_CALIBRATE
        {% if save %}
        SAVE_VARIABLE VARIABLE=level_age VALUE=1 ; reset counter
        SAVE_CONFIG
        {% else %}
        SET_GCODE_VARIABLE MACRO=BED_MESH_IF_OUTDATE VARIABLE=save_at_end VALUE=1
        {% endif %}
    {% else %}
        {action_respond_info("Loading old bed mesh.")} 
        BED_MESH_PROFILE LOAD=default
    {% endif %}

# runs SAVE_CONFIG if the g-code variable was set in start gcode
[gcode_macro SAVE_IF_BED_MESH_SET]
gcode:
    {% if printer["gcode_macro BED_MESH_IF_OUTDATE"].save_at_end == 1 %}
    {action_respond_info("Saving was requested - saving and restarting now.")}
    SAVE_VARIABLE VARIABLE=level_age VALUE=1
    SAVE_CONFIG
    {% endif %}
